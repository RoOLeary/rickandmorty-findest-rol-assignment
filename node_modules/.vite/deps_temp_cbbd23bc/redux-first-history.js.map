{
  "version": 3,
  "sources": ["../../.pnpm/redux-first-history@5.2.0_history@5.3.0_redux@5.0.1/node_modules/redux-first-history/src/actions.ts", "../../.pnpm/redux-first-history@5.2.0_history@5.3.0_redux@5.0.1/node_modules/redux-first-history/src/reachify.ts", "../../.pnpm/redux-first-history@5.2.0_history@5.3.0_redux@5.0.1/node_modules/redux-first-history/src/middleware.ts", "../../.pnpm/redux-first-history@5.2.0_history@5.3.0_redux@5.0.1/node_modules/redux-first-history/src/reducer.ts", "../../.pnpm/redux-first-history@5.2.0_history@5.3.0_redux@5.0.1/node_modules/redux-first-history/src/create.ts"],
  "sourcesContent": ["import type { Location, Action, History } from 'history';\nimport type { AnyAction } from 'redux';\n\nexport const CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\nexport const LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\n//support history v4/ v5\nexport type HistoryMethods =\n   | 'push'\n   | 'replace'\n   | 'go'\n   | 'goBack'\n   | 'goForward'\n   | 'back'\n   | 'forward';\n\nexport const locationChangeAction = (location: Location, action: Action) => ({\n   type: LOCATION_CHANGE as typeof LOCATION_CHANGE,\n   payload: { location, action } as { location: Location; action: Action },\n});\n\nexport interface LocationActionPayload<A = unknown[]> {\n   method: string;\n   args?: A;\n}\n\nexport interface CallHistoryMethodAction<A = unknown[]> extends AnyAction {\n   type: typeof CALL_HISTORY_METHOD;\n   payload: LocationActionPayload<A>;\n}\n\nfunction updateLocation<T extends HistoryMethods>(method: T) {\n   // @ts-ignore //support history 5.x back/forward\n   return (...args: Parameters<History[T]>): CallHistoryMethodAction<Parameters<History[T]>> => ({\n      type: CALL_HISTORY_METHOD as typeof CALL_HISTORY_METHOD,\n      payload: { method, args },\n   });\n}\n\nexport const push: (\n   ...args: Parameters<History['push']>\n) => CallHistoryMethodAction<Parameters<History['push']>> = updateLocation('push');\nexport const replace: (\n   ...args: Parameters<History['replace']>\n) => CallHistoryMethodAction<Parameters<History['replace']>> = updateLocation('replace');\nexport const go: (\n   ...args: Parameters<History['go']>\n) => CallHistoryMethodAction<Parameters<History['go']>> = updateLocation('go');\nexport const goBack: () => CallHistoryMethodAction<Parameters<History['goBack']>> =\n   updateLocation('goBack');\nexport const goForward: () => CallHistoryMethodAction<Parameters<History['goForward']>> =\n   updateLocation('goForward');\n// @ts-ignore //support history 5.x back/forward\nexport const back: () => CallHistoryMethodAction<Parameters<History['back']>> =\n   updateLocation('back');\n// @ts-ignore //support history 5.x back/forward\nexport const forward: () => CallHistoryMethodAction<Parameters<History['forward']>> =\n   updateLocation('forward');\n\nexport type RouterActions =\n   | ReturnType<typeof push>\n   | ReturnType<typeof replace>\n   | ReturnType<typeof go>\n   | ReturnType<typeof goBack>\n   | ReturnType<typeof goForward>\n   | ReturnType<typeof locationChangeAction>\n   | ReturnType<typeof back>\n   | ReturnType<typeof forward>;\n", "// eslint-disable-next-line import/no-unresolved\nimport { History } from 'history';\nimport { ReachHistory } from './reachify.types';\n\nexport const reachify = (reduxHistory: History & { listenObject: boolean }): ReachHistory => {\n   let transitioning = false;\n   // eslint-disable-next-line @typescript-eslint/no-empty-function\n   let resolveTransition = () => {};\n\n   return {\n      // eslint-disable-next-line no-underscore-dangle\n      _onTransitionComplete() {\n         transitioning = false;\n         resolveTransition();\n      },\n      listen(listener) {\n         if (reduxHistory.listenObject) {\n            // @ts-ignore\n            return reduxHistory.listen(listener);\n         }\n         // @ts-ignore\n         return reduxHistory.listen((location, action) => listener({ location, action }));\n      },\n      // @ts-ignore\n      navigate(to, { state, replace = false } = {}) {\n         if (transitioning || replace) {\n            reduxHistory.replace(to, state);\n         } else {\n            reduxHistory.push(to, state);\n         }\n         transitioning = true;\n         // eslint-disable-next-line no-return-assign\n         // @ts-ignore\n         return new Promise(res => (resolveTransition = res));\n      },\n      // @ts-ignore\n      get location() {\n         return reduxHistory.location;\n      },\n      get transitioning() {\n         return transitioning;\n      },\n   };\n};\n", "/* eslint-disable consistent-return,indent */\nimport { History } from 'history';\nimport { AnyAction as ReduxAction, Dispatch, Middleware } from 'redux';\nimport { CALL_HISTORY_METHOD, HistoryMethods } from './actions';\n\ntype CreateRouterMiddlewareArgs = {\n   history: History;\n   showHistoryAction: boolean;\n   basename?: string;\n};\n\nfunction appendBasename(location: string | Location, basename: string): string | Location {\n   if (typeof location === 'string' && !location.startsWith(basename)) {\n      return basename + location;\n   }\n   if (\n      typeof location === 'object' &&\n      !!location.pathname &&\n      !location.pathname.startsWith(basename)\n   ) {\n      return { ...location, pathname: basename + location.pathname };\n   }\n   return location;\n}\n\nexport const createRouterMiddleware =\n   ({ history, showHistoryAction, basename }: CreateRouterMiddlewareArgs): Middleware =>\n   () =>\n   // @ts-ignore\n   (next: Dispatch) =>\n   (action: ReduxAction) => {\n      if (action.type !== CALL_HISTORY_METHOD) {\n         return next(action);\n      }\n      // @ts-ignore\n      const method = action.payload.method as HistoryMethods;\n      // @ts-ignore\n      const args = action.payload.args as Parameters<History[HistoryMethods]>;\n\n      // eslint-disable-next-line default-case\n      switch (method) {\n         case 'push': {\n            let callArgs = args;\n            if (basename && args.length > 0) {\n               callArgs = [\n                  appendBasename(args[0] as string | Location, basename),\n                  ...args.slice(1),\n               ];\n            }\n            history.push(...(callArgs as Parameters<History['push']>));\n            break;\n         }\n         case 'replace': {\n            let callArgs = args;\n            if (basename && args.length > 0) {\n               callArgs = [\n                  appendBasename(args[0] as string | Location, basename),\n                  ...args.slice(1),\n               ];\n            }\n            history.replace(...(callArgs as Parameters<History['replace']>));\n            break;\n         }\n         case 'go':\n            history.go(...(args as Parameters<History['go']>));\n            break;\n         case 'back':\n         case 'goBack':\n            // @ts-ignore\n            history.goBack && history.goBack(...(args as Parameters<History['goBack']>));\n            //@ts-ignore //support history 5.x\n            history.back && history.back(...(args as Parameters<History['back']>));\n            break;\n         case 'forward':\n         case 'goForward':\n            // @ts-ignore\n            history.goForward && history.goForward(...(args as Parameters<History['goForward']>));\n            //@ts-ignore //support history 5.x\n            history.forward && history.forward(...(args as Parameters<History['forward']>));\n            break;\n      }\n      if (showHistoryAction) return next(action);\n   };\n", "import { Action, Location } from 'history';\nimport { AnyAction, Reducer } from 'redux';\nimport { LOCATION_CHANGE } from './actions';\n\nexport type RouterState = {\n   location?: Location | null;\n   action?: Action | null;\n   previousLocations?: { location?: Location | null; action?: Action | null }[];\n   basename?: string;\n};\n\nexport const createRouterReducer = ({\n   savePreviousLocations = 0,\n   basename,\n}: {\n   savePreviousLocations?: number;\n   basename?: string;\n}): Reducer<RouterState> => {\n   const initialState: RouterState = {\n      location: null,\n      action: null,\n      basename,\n   };\n\n   // eslint-disable-next-line no-restricted-globals\n   const numLocationToTrack = isNaN(savePreviousLocations) ? 0 : savePreviousLocations;\n   if (numLocationToTrack) initialState.previousLocations = [];\n\n   return (state = initialState, { type, payload } = {} as AnyAction) => {\n      if (type === LOCATION_CHANGE) {\n         const { location, action } = (payload || {}) as {\n            location?: Location | null;\n            action?: Action | null;\n         };\n         const previousLocations = numLocationToTrack // @ts-ignore\n            ? [{ location, action }, ...state.previousLocations.slice(0, numLocationToTrack)]\n            : undefined;\n         return { ...state, location, action, previousLocations };\n      }\n      return state;\n   };\n};\n", "import type { History, Location } from 'history';\nimport type { Middleware, Reducer, Store } from 'redux';\nimport type { ReachHistory } from './reachify.types';\nimport {\n   go,\n   goBack,\n   goForward,\n   back,\n   forward,\n   push,\n   replace,\n   locationChangeAction,\n} from './actions';\nimport { createRouterMiddleware } from './middleware';\nimport { createRouterReducer, RouterState } from './reducer';\n\nexport interface IHistoryContextOptions {\n   history: History;\n   routerReducerKey?: string;\n   reduxTravelling?: boolean;\n   showHistoryAction?: boolean;\n   selectRouterState?: <S>(state: S) => RouterState;\n   savePreviousLocations?: number;\n   batch?: (callback: () => void) => void;\n   reachGlobalHistory?: ReachHistory;\n   basename?: string;\n}\n\nexport interface IHistoryContext {\n   createReduxHistory: (store: Store) => History & { listenObject: boolean };\n   routerMiddleware: Middleware;\n   routerReducer: Reducer<RouterState>;\n}\n\nexport const createReduxHistoryContext = ({\n   history,\n   routerReducerKey = 'router',\n   reduxTravelling = false,\n   showHistoryAction = false,\n   selectRouterState,\n   savePreviousLocations = 0,\n   batch,\n   reachGlobalHistory,\n   basename,\n}: IHistoryContextOptions): IHistoryContext => {\n   let listenObject = false;\n\n   // @ts-ignore\n   const callListener = (listener, location, action) =>\n      listenObject ? listener({ location, action }) : listener(location, action);\n\n   if (typeof batch !== 'function') {\n      batch = fn => {\n         fn();\n      };\n   }\n\n   /** ********************************************  REDUX REDUCER ***************************************************** */\n\n   if (typeof selectRouterState !== 'function') {\n      selectRouterState = state => state[routerReducerKey];\n   }\n\n   const routerReducer = createRouterReducer({ savePreviousLocations, basename });\n   const routerMiddleware = createRouterMiddleware({ history, showHistoryAction, basename });\n\n   /** ******************************************  REDUX TRAVELLING  ************************************************** */\n\n   let isReduxTravelling = false;\n\n   const handleReduxTravelling = (store: Store) => {\n      const locationEqual = (loc1: Location, loc2: Location) =>\n         loc1.pathname === loc2.pathname && loc1.search === loc2.search && loc1.hash === loc2.hash;\n\n      return store.subscribe(() => {\n         // @ts-ignore\n         const sLoc = selectRouterState(store.getState()).location;\n         const hLoc = history.location;\n         if (sLoc && hLoc && !locationEqual(sLoc, hLoc)) {\n            isReduxTravelling = true;\n            history.push({ pathname: sLoc.pathname, search: sLoc.search, hash: sLoc.hash });\n         }\n      });\n   };\n\n   /** ******************************************  REDUX FIRST HISTORY   *********************************************** */\n\n   const createReduxHistory = (store: Store): History & { listenObject: boolean } => {\n      let registeredCallback: unknown[] = [];\n\n      // init location store\n      store.dispatch(locationChangeAction(history.location, history.action));\n\n      if (reduxTravelling) {\n         handleReduxTravelling(store);\n      }\n      // listen to history API\n      // @ts-ignore\n      history.listen((location, action) => {\n         // support history v5\n         // @ts-ignore\n         if (location.location) {\n            // @ts-ignore\n            action = location.action;\n            // @ts-ignore\n            location = location.location;\n            listenObject = true;\n         }\n\n         if (isReduxTravelling) {\n            isReduxTravelling = false;\n            // notify registered callback travelling\n            // @ts-ignore\n            const routerState = selectRouterState(store.getState());\n            registeredCallback.forEach(c =>\n               callListener(c, routerState.location, routerState.action),\n            );\n            return;\n         }\n         // @ts-ignore\n         batch(() => {\n            store.dispatch(locationChangeAction(location, action));\n            // @ts-ignore\n            const routerState = selectRouterState(store.getState());\n            registeredCallback.forEach(c =>\n               callListener(c, routerState.location, routerState.action),\n            );\n         });\n      });\n\n      // listen to reach globalHistory (support \"navigate\")\n      if (reachGlobalHistory) {\n         reachGlobalHistory.listen(({ location, action }) => {\n            if (action !== `POP`) {\n               const loc = {\n                  pathname: location.pathname,\n                  search: location.search,\n                  hash: location.hash,\n                  key: location.key,\n                  state: location.state,\n               };\n               // @ts-ignore\n               batch(() => {\n                  // @ts-ignore\n                  store.dispatch(locationChangeAction(loc, action));\n                  // @ts-ignore\n                  const routerState = selectRouterState(store.getState());\n                  registeredCallback.forEach(c =>\n                     callListener(c, routerState.location, routerState.action),\n                  );\n               });\n            }\n         });\n      }\n\n      // @ts-ignore\n      return {\n         block: history.block,\n         createHref: history.createHref,\n         push: (...args: Parameters<History['push']>) => store.dispatch(push(...args)),\n         replace: (...args: Parameters<History['replace']>) => store.dispatch(replace(...args)),\n         go: (...args: Parameters<History['go']>) => store.dispatch(go(...args)),\n         // @ts-ignore\n         goBack: (...args: Parameters<History['goBack']>) => store.dispatch(goBack(...args)),\n         // @ts-ignore\n         goForward: (...args: Parameters<History['goForward']>) =>\n            // @ts-ignore\n            store.dispatch(goForward(...args)),\n         // @ts-ignore\n         back: (...args: Parameters<History['back']>) => store.dispatch(back(...args)),\n         // @ts-ignore\n         forward: (...args: Parameters<History['forward']>) => store.dispatch(forward(...args)),\n         listen: callback => {\n            if (registeredCallback.indexOf(callback) < 0) {\n               registeredCallback.push(callback);\n            }\n            return () => {\n               registeredCallback = registeredCallback.filter(c => c !== callback);\n            };\n         },\n         // @ts-ignore\n         get location() {\n            // @ts-ignore\n            return selectRouterState(store.getState()).location;\n         },\n         // @ts-ignore\n         get action() {\n            // @ts-ignore\n            return selectRouterState(store.getState()).action;\n         },\n         get length() {\n            // @ts-ignore\n            return history.length;\n         },\n         // @ts-ignore\n         get listenObject() {\n            return listenObject;\n         },\n      };\n   };\n\n   return { routerReducer, routerMiddleware, createReduxHistory };\n};\n"],
  "mappings": "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",
  "names": ["replace"]
}
